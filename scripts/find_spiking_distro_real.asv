clear all;
addpath /comp_neuro/Software/Github/CMBHOME_github/
[filename,f_length]=get_filename(1);
spk_hz_group

for i=1:f_length
	[filename,f_length]=get_filename(i);
	cell_selection=get_cell_selection(i);
	spk_hz=find_hz(filename,cell_selection);
    if i==1 fprintf("Processed:\n"); end
	fprintf("File:%d Hz:%f\n",i,spk_hz);
end

function spk_hz=find_hz(filename,cell_selection);
	root.cel = cell_selection; % select cell of interest
	y_offset = 660;
	limit_time = false; % choose to limit time of data extracted
	total_time = 2400000; % max time of recordings to save in ms
	time_step = 20; % recording timestep
	timevars = [limit_time, total_time, time_step];

	% load data
	load(filename);
	CMBHOME.Utils.ContinuizeEpochs(root.ts); 
	rec_seconds = root.epoch(2);

	% retrieve spikes
	cd /home/nmsutton/Dropbox/CompNeuro/gmu/research/sim_project/code/holger_data/nate_scripts/for_jeffrey
	spikes=retrieve_spikes(root, timevars, y_offset, cell_selection);
	cd /home/nmsutton/Dropbox/CompNeuro/gmu/research/sim_project/code/gc_can_cs4/scripts

	spk_count = size(spikes(1,:),2);
	spk_hz = spk_count/rec_seconds;
end

function [filename,f_length]=get_filename(i)
	filenames=[ "/media/nmsutton/StorageDrive7/comp_neuro/holger_data/0823_S1_0824_S1_S2_lightVSdarkness_merged.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/180815_S1_S2_lightVSdarkness_merged.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/180816_S1_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/180817_S1_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/180822_S2_ligthVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/180827_S1_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/181218_S1_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/181220_S1_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190720_S2_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190722_S2_lightVSdarkness.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190805_S3_LightVSdarkness_42min.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190807_S1_LightVSdarkness_42min.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190809_S1_LightVSdarkness_42min.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190812_S2_LightVSdarkness_72min.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190911_S1_42minLightVSdarkness3min.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/190916_S1_42minLightVSdarkness3min.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/191030_S2_lightVSdarkness_cell10.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/191101_S1_lightVSdarkness_cell9.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/191103_S1_lightVSdarkness_cells13and14.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/191105_S1_lightVSdarkness_cell15.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/191108_S1_lightVSdarkness_cells11and12.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/GCaMP6fChAT10_gridCell_mergedSessions.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_session_ArchTChAT22_cell3.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_session_ArchTChAT22_cell4.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_session_cell8_ArchTChAT22.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/Merged_sessions.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_sessions_ArchTChAT22_cell2.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_sessions_ArchTChAT#22_cell1.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_sessions_cells5to7_ArchTChAT22.mat";
				"/media/nmsutton/StorageDrive7/comp_neuro/holger_data/merged_sessions_gridCells.mat";];

	filename=filenames(i);
    f_length=length(filenames);
end

function cell_selection=get_cell_selection(i)
	tetrodes = [2;2;1;2;2;1;1;1;2;2;2;2;2;2;2;2;2;2;1;1;1;1;1;1;1;2;2;2;1;1;];
	cells =    [2;5;3;1;2;2;6;7;7;4;9;7;5;4;5;1;1;12;9;3;9;15;1;2;3;1;1;1;1;1];

	cell_selection = [tetrodes(i),cells(i)];
end